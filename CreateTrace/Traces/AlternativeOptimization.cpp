#include <cstdio>
#include <iostream>
#include <algorithm>
#include <math.h>
#include <algorithm>

using namespace std;

const int size = 259;

//int leftArr[334] = {0,0,0,0,0,0,0,4,12,25,37,51,70,88,106,121,130,138,141,143,144,146,148,150,152,155,161,168,176,184,195,209,221,240,256,268,281,292,305,318,329,339,348,359,368,377,386,395,401,407,414,419,423,425,428,429,430,430,430,431,434,436,439,442,449,457,464,474,484,498,514,531,548,566,580,598,609,618,628,638,649,657,668,677,686,695,702,709,717,724,732,738,743,747,753,760,766,773,779,787,795,804,812,821,830,839,847,855,863,875,883,899,908,918,932,943,954,965,979,987,998,1007,1018,1026,1034,1043,1047,1052,1057,1061,1064,1067,1073,1079,1085,1096,1104,1114,1125,1134,1143,1150,1164,1171,1185,1193,1203,1212,1220,1228,1236,1243,1250,1258,1265,1269,1273,1280,1288,1292,1293,1294,1296,1296,1296,1296,1296,1296,1296,1296,1296,1296,1296,1296,1296,1297,1298,1300,1308,1320,1334,1354,1373,1390,1397,1402,1406,1409,1411,1411,1411,1411,1411,1411,1411,1412,1412,1412,1412,1412,1416,1422,1437,1447,1464,1485,1501,1519,1530,1536,1542,1547,1551,1554,1556,1561,1565,1570,1575,1581,1586,1592,1598,1604,1611,1619,1626,1636,1644,1651,1659,1670,1680,1693,1700,1709,1717,1725,1734,1746,1755,1768,1778,1788,1796,1804,1812,1819,1829,1839,1847,1856,1867,1875,1881,1890,1899,1907,1915,1925,1932,1939,1950,1959,1968,1975,1983,1993,2002,2012,2023,2034,2045,2057,2069,2083,2095,2108,2124,2133,2143,2155,2164,2175,2185,2195,2205,2213,2223,2230,2236,2243,2249,2256,2264,2273,2281,2293,2308,2319,2330,2342,2353,2363,2372,2384,2394,2408,2418,2428,2440,2449,2460,2476,2490,2500,2513,2522,2535,2544,2555,2566,2577,2587,2601,2610,2623,2634,2646,2656,2668,2679,2689,2696};
//int rightArr[334] = {-5,-15,-25,-37,-52,-67,-86,-102,-109,-112,-112,-112,-112,-112,-113,-118,-126,-136,-145,-154,-167,-180,-192,-209,-225,-243,-265,-279,-294,-304,-317,-329,-339,-354,-364,-375,-387,-397,-410,-423,-436,-452,-466,-484,-497,-513,-527,-544,-556,-571,-589,-602,-621,-633,-653,-665,-680,-704,-720,-738,-754,-765,-783,-795,-816,-831,-842,-857,-872,-881,-888,-902,-915,-928,-940,-958,-971,-985,-999,-1014,-1032,-1046,-1064,-1083,-1100,-1116,-1128,-1142,-1156,-1171,-1187,-1202,-1216,-1231,-1246,-1265,-1280,-1293,-1306,-1321,-1336,-1348,-1361,-1374,-1388,-1401,-1413,-1423,-1434,-1448,-1458,-1475,-1485,-1495,-1510,-1522,-1535,-1546,-1563,-1574,-1591,-1605,-1626,-1642,-1656,-1678,-1691,-1707,-1725,-1748,-1765,-1779,-1794,-1809,-1823,-1840,-1852,-1864,-1879,-1889,-1899,-1909,-1921,-1929,-1943,-1951,-1963,-1974,-1985,-1996,-2010,-2022,-2036,-2051,-2071,-2084,-2101,-2119,-2137,-2156,-2172,-2190,-2209,-2227,-2244,-2265,-2282,-2305,-2323,-2338,-2361,-2380,-2400,-2420,-2438,-2454,-2468,-2484,-2494,-2497,-2498,-2498,-2498,-2508,-2519,-2538,-2561,-2574,-2599,-2621,-2644,-2663,-2685,-2700,-2719,-2734,-2756,-2773,-2785,-2798,-2813,-2827,-2834,-2836,-2836,-2836,-2841,-2852,-2864,-2879,-2897,-2920,-2937,-2959,-2980,-3002,-3016,-3033,-3047,-3061,-3074,-3087,-3101,-3113,-3131,-3146,-3160,-3180,-3196,-3209,-3226,-3243,-3259,-3278,-3292,-3308,-3321,-3333,-3347,-3363,-3376,-3395,-3407,-3421,-3433,-3443,-3453,-3463,-3477,-3491,-3503,-3518,-3536,-3549,-3563,-3579,-3595,-3609,-3624,-3640,-3653,-3664,-3682,-3697,-3712,-3723,-3735,-3749,-3761,-3777,-3791,-3803,-3815,-3829,-3840,-3852,-3862,-3872,-3884,-3894,-3904,-3916,-3927,-3940,-3953,-3966,-3979,-3992,-4008,-4023,-4038,-4050,-4062,-4075,-4087,-4099,-4110,-4122,-4137,-4148,-4159,-4170,-4180,-4190,-4199,-4212,-4221,-4237,-4246,-4257,-4268,-4278,-4289,-4305,-4321,-4330,-4344,-4354,-4368,-4377,-4389,-4401,-4414,-4423,-4438,-4448,-4460,-4472,-4486,-4498,-4512,-4519,-4530,-4536};
//int diff[334];

const int d = 15;

int main()
{
	double leftArr[size] = {0,0,5,16,27,42,54,64,72,79,89,102,112,126,139,152,165,178,190,205,219,235,250,265,284,299,314,330,350,367,383,401,424,444,465,486,510,531,557,576,605,625,646,664,693,713,728,746,762,779,794,811,829,846,864,887,906,927,948,967,990,1010,1032,1050,1068,1090,1107,1127,1147,1166,1188,1206,1224,1240,1257,1274,1290,1306,1319,1336,1350,1365,1385,1403,1421,1440,1457,1482,1501,1521,1547,1568,1587,1603,1625,1644,1661,1677,1697,1718,1737,1755,1778,1797,1815,1832,1846,1868,1884,1902,1918,1940,1957,1974,1989,2007,2023,2039,2056,2077,2095,2113,2133,2152,2173,2190,2207,2224,2241,2257,2272,2291,2307,2324,2339,2355,2368,2382,2400,2414,2430,2446,2462,2487,2506,2526,2546,2563,2587,2605,2623,2641,2657,2680,2695,2711,2727,2741,2755,2769,2789,2805,2822,2836,2850,2862,2875,2891,2906,2921,2937,2951,2964,2977,2991,3004,3020,3033,3045,3057,3069,3083,3095,3106,3119,3131,3143,3160,3174,3189,3205,3221,3234,3249,3263,3277,3294,3307,3320,3332,3344,3356,3367,3379,3391,3402,3416,3429,3444,3461,3476,3493,3509,3524,3544,3560,3578,3596,3612,3626,3644,3664,3679,3696,3716,3732,3749,3767,3793,3811,3830,3846,3870,3889,3909,3931,3949,3967,3986,4008,4027,4043,4057,4072,4086,4100,4114,4132,4146,4159,4171,4183,4195,4214,4230,4246,4262,4279,4295};
	double rightArr[size] = {-3,-8,-25,-40,-58,-78,-96,-117,-134,-154,-174,-183,-190,-196,-200,-203,-205,-206,-206,-211,-221,-232,-243,-253,-268,-283,-298,-315,-338,-357,-375,-394,-418,-439,-459,-481,-506,-527,-554,-572,-599,-619,-639,-654,-677,-698,-714,-737,-755,-774,-791,-815,-833,-853,-872,-895,-914,-935,-955,-975,-998,-1018,-1038,-1054,-1067,-1085,-1105,-1124,-1144,-1160,-1181,-1199,-1217,-1235,-1257,-1275,-1293,-1310,-1327,-1350,-1366,-1384,-1406,-1423,-1442,-1460,-1476,-1497,-1515,-1534,-1560,-1580,-1600,-1617,-1646,-1666,-1686,-1704,-1732,-1758,-1777,-1795,-1816,-1832,-1847,-1859,-1870,-1885,-1898,-1913,-1924,-1940,-1956,-1971,-1987,-2008,-2024,-2041,-2059,-2082,-2100,-2119,-2138,-2154,-2172,-2191,-2205,-2219,-2230,-2241,-2250,-2264,-2275,-2280,-2284,-2288,-2292,-2295,-2305,-2320,-2335,-2352,-2370,-2398,-2416,-2435,-2453,-2468,-2487,-2503,-2517,-2530,-2540,-2557,-2567,-2573,-2579,-2584,-2589,-2592,-2599,-2609,-2618,-2625,-2632,-2638,-2643,-2653,-2666,-2675,-2683,-2689,-2696,-2701,-2706,-2711,-2715,-2718,-2721,-2723,-2725,-2726,-2726,-2727,-2727,-2727,-2727,-2733,-2745,-2753,-2760,-2769,-2776,-2783,-2789,-2794,-2801,-2805,-2809,-2812,-2814,-2816,-2818,-2818,-2819,-2819,-2824,-2837,-2849,-2864,-2877,-2888,-2898,-2905,-2919,-2933,-2945,-2956,-2964,-2971,-2982,-2998,-3009,-3017,-3031,-3046,-3061,-3079,-3106,-3125,-3145,-3161,-3183,-3201,-3219,-3238,-3253,-3267,-3279,-3295,-3304,-3312,-3319,-3325,-3330,-3334,-3338,-3342,-3345,-3347,-3349,-3351,-3351,-3358,-3372,-3386,-3402,-3420,-3436};
	double diff[size];

	for (int i = 0; i < size; i++)
		diff[i] = leftArr[i] + rightArr[i];

	for (int i = 0; i < size; i++)
	{
		for (int j = min(size, i + 25); j > i; j--)
			if ((((diff[i] - diff[j]) < d) && ((diff[i] - diff[j]) > 0)) || (((-diff[i] + diff[j]) < d) && ((diff[i] - diff[j]) < 0)))
			{
				double lengthOfPolygon = 0;
				for (int k = i; k < j; k++)
				{
					lengthOfPolygon += sqrt((leftArr[k] - leftArr[k + 1]) * (leftArr[k] - leftArr[k + 1]) + (rightArr[k + 1] - rightArr[k]) * (rightArr[k + 1] - rightArr[k]));
				}

				double lengthOfLine = sqrt((leftArr[i] - leftArr[j]) * (leftArr[i] - leftArr[j]) + (rightArr[i] - rightArr[j]) * (rightArr[i] - rightArr[j]));

				double koef = lengthOfLine  / lengthOfPolygon;

				if (koef >= 1)
					break;

				double oldL = leftArr[j];
				double oldR = rightArr[j];

				leftArr[j] = leftArr[j] * koef;
				rightArr[j] = rightArr[j] * koef;

				double diffL = oldL - leftArr[j];
				double diffR = oldR - rightArr[j];

				for (int k = j + 1; k < size; k++)
				{
					leftArr[k] = leftArr[k] - diffL;
					rightArr[k] = rightArr[k]  - diffR;
				}

				for (int k = i + 1; k < j; k++)
				{
					leftArr[k] = leftArr[i] + (leftArr[j] - leftArr[i]) * (k - i) / (j - i);
					rightArr[k] = rightArr[i] + (rightArr[j] - rightArr[i]) * (k - i) / (j - i);
				}

				i = j + 1;

				break;
			}
	}

	freopen("opt_encoders.txt", "w", stdout);
	printf("leftArr = [");
	for (int i = 0; i < size; i++)
		printf((i ==  size - 1  ? "%.5lf" : "%.5lf, "), leftArr[i]);
	printf("]\n");

	printf("rightArr = [");
	for (int i = 0; i < size; i++)
		printf((i == size - 1 ? "%.5lf" : "%.5lf, "), rightArr[i]);
	printf("]\n");

	return 0;
}
